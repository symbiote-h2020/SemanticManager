spring.application.name=EnablerPlatformProxy
spring.cloud.config.uri=http://localhost:8888
logging.file=logs/EnablerPlatformProxy.log

symbiote.enabler.platformproxy.mongo.dbname=symbiote-enabler-platformproxy
symbiote.enabler.platformproxy.mongo.host=localhost

rabbit.host = localhost
rabbit.username = guest
rabbit.password = guest
rabbit.exchange.enablerLogic.name = logicname

rabbit.exchange.enablerPlatformProxy.name = ppname
rabbit.exchange.enablerPlatformProxy.type = pptype
rabbit.exchange.enablerPlatformProxy.durable = true
rabbit.exchange.enablerPlatformProxy.autodelete = true
rabbit.exchange.enablerPlatformProxy.internal = true

rabbit.routingKey.enablerPlatformProxy.acquisitionStartRequested = ppacquisitionstart

rabbit.routingKey.enablerPlatformProxy.acquisitionStopRequested = ppacquisitionstop

rabbit.routingKey.enablerPlatformProxy.singleReadRequested = singleread

rabbit.routingKey.enablerLogic.dataAppeared = ppdataappeared


symbiote.enabler.core.username = psncTestEnabler
symbiote.enabler.core.password = psnc1234
symbiote.enabler.core.interface.url = https://symbiote-dev.man.poznan.pl:8100/coreInterface/v1/

debug=true
spring.sleuth.sampler.percentage=1.0

info.id=${spring.application.name}

server.port=${PORT:0}

logging.level.org.springframework.security=DEBUG
#logging.pattern.console=%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%5p) %clr(${PID:- }){magenta} %clr(---){faint} %clr([trace=%X{X-Trace-Id:-},span=%X{X-Span-Id:-}]){yellow} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n%wex

spring.sleuth.log.json.enabled=true

#spring.zipkin.host=${DOCKER_IP}

#spring.cloud.consul.host=${DOCKER_IP}
#spring.cloud.consul.discovery.hostname=${DOCKER_HOST_IP:cna}

logging.level.com.netflix.eureka=OFF
logging.level.com.netflix.discovery=OFF


#spring.rabbitmq.host=${DOCKER_IP}
#spring.redis.host=${DOCKER_IP}

#spring.zipkin.base-url=http://${DOCKER_IP}:9411
spring.zipkin.base-url=http://localhost:8762





endpoints.shutdown.enabled=true

spring.jpa.generate-ddl=true


#eureka.instance.hostname=${vcap.application.uris[0]:localhost}
#eureka.instance.nonSecurePort=80



## Rabbit specific binder bits
# spring.cloud.stream.binder.rabbit.default.default-delivery-mode=persistent
# spring.cloud.stream.binder.rabbit.default.acknowledge-mode=manual
# spring.cloud.stream.binder.rabbit.default.durable-subscription=true
# spring.cloud.stream.binder.rabbit.default.transacted=true
# spring.cloud.stream.binder.rabbit.default.default-requeue-rejected=true
# spring.cloud.stream.binder.rabbit.default.auto-bind-dlq=true
# spring.cloud.stream.binder.rabbit.default.republish-to-dlq=true

rabbit.exchange.platform.name=symbIoTe.platform
rabbit.exchange.platform.type=topic
rabbit.exchange.platform.durable=true
rabbit.exchange.platform.autodelete=false
rabbit.exchange.platform.internal=false

rabbit.exchange.resource.name=symbIoTe.resource
rabbit.exchange.resource.type=topic
rabbit.exchange.resource.durable=true
rabbit.exchange.resource.autodelete=false
rabbit.exchange.resource.internal=false

rabbit.routingKey.platform.creationRequested=symbIoTe.platform.creationRequested
rabbit.routingKey.platform.creationPerformed=symbIoTe.platform.creationPerformed
rabbit.routingKey.platform.created=symbIoTe.platform.created

rabbit.routingKey.platform.removalRequested=symbIoTe.platform.removalRequested
rabbit.routingKey.platform.removalPerformed=symbIoTe.platform.removalPerformed
rabbit.routingKey.platform.removed=symbIoTe.platform.deleted

rabbit.routingKey.platform.modificationRequested=symbIoTe.platform.updatedRequested
rabbit.routingKey.platform.modificationPerformed=symbIoTe.platform.updatedPerformed
rabbit.routingKey.platform.modified=symbIoTe.platform.updated

rabbit.routingKey.resource.creationRequested=symbIoTe.resource.creationRequested
rabbit.routingKey.resource.creationPerformed=symbIoTe.resource.creationPerformed
rabbit.routingKey.resource.created=symbIoTe.resource.created

rabbit.routingKey.resource.removalRequested=symbIoTe.resource.removalRequested
rabbit.routingKey.resource.removalPerformed=symbIoTe.resource.removalPerformed
rabbit.routingKey.resource.removed=symbIoTe.resource.deleted

rabbit.routingKey.resource.modificationRequested=symbIoTe.resource.modificationRequested
rabbit.routingKey.resource.modificationPerformed=symbIoTe.resource.modificationPerformed
rabbit.routingKey.resource.modified=symbIoTe.resource.updated

rabbit.routingKey.resource.searchRequested=resource.searchRequested
rabbit.routingKey.resource.searchPerformed=resource.searchPerformed

rabbit.routingKey.resource.sparqlSearchRequested=resource.sparqlSearchRequested
rabbit.routingKey.resource.sparqlSearchPerformed=resource.sparqlSearchPerformed

rabbit.routingKey.platform.model.creationRequested=symbIoTe.informationModel.creationRequested
rabbit.routingKey.platform.model.creationPerformed=symbIoTe.informationModel.creationPerformed

rabbit.routingKey.platform.model.removalRequested=symbIoTe.informationModel.removalRequested
rabbit.routingKey.platform.model.removalPerformed=symbIoTe.informationModel.removalPerformed

rabbit.routingKey.platform.model.modificationRequested=symbIoTe.informationModel.modificationRequested
rabbit.routingKey.platform.model.modificationPerformed=symbIoTe.informationModel.modificationPerformed

rabbit.routingKey.platform.resourcesRequested=symbIoTe.platform.resourcesRequested
rabbit.routingKey.platform.model.allInformationModelsRequested=symbIoTe.informationModel.allInformationModelsRequested

## Semantic routing keys
rabbit.routingKey.platform.model.validationRequested=symbIoTe.platform.model.validationRequested
rabbit.routingKey.platform.model.validationPerformed=symbIoTe.platform.model.validationPerformed
rabbit.routingKey.platform.model.created=symbIoTe.platform.model.created
rabbit.routingKey.platform.model.modified=symbIoTe.platform.model.modified
rabbit.routingKey.platform.model.removed=symbIoTe.platform.model.removed
rabbit.routingKey.platform.instance.validationRequested=symbIoTe.platform.instance.validationRequested
rabbit.routingKey.platform.instance.validationPerformed=symbIoTe.platform.instance.validationPerformed
rabbit.routingKey.platform.instance.translationRequested=symbIoTe.platform.instance.translationRequested
rabbit.routingKey.platform.instance.translationPerformed=symbIoTe.platform.instance.translationPerformed

rabbit.routingKey.resource.instance.validationRequested=symbIoTe.resource.instance.validationRequested
rabbit.routingKey.resource.instance.validationPerformed=symbIoTe.resource.instance.validationPerformed
rabbit.routingKey.resource.instance.translationRequested=symbIoTe.resource.instance.translationRequested
rabbit.routingKey.resource.instance.translationPerformed=symbIoTe.resource.instance.translationPerformed

##########################################################
## CRAM Configuration
##########################################################
rabbit.exchange.cram.name=symbIoTe.CoreResourceAccessMonitor
rabbit.exchange.cram.type=direct
rabbit.exchange.cram.durable=true
rabbit.exchange.cram.autodelete=false
rabbit.exchange.cram.internal=false

rabbit.routingKey.cram.getResourceUrls=symbIoTe.CoreResourceAccessMonitor.coreAPI.get_resource_urls

##########################################################
## Search popularity
##########################################################
rabbit.exchange.search.name=symbIoTe.Search
rabbit.exchange.search.type=direct
rabbit.exchange.search.durable=true
rabbit.exchange.search.autodelete=false
rabbit.exchange.search.internal=false

rabbit.routingKey.search.popularityUpdates=symbIoTe.search.popularityUpdates

##########################################################
## CRM Configuration
##########################################################
rabbit.exchange.crm.name=symbIoTe.CoreResourceMonitor
rabbit.exchange.crm.type=topic
rabbit.exchange.crm.durable=true
rabbit.exchange.crm.autodelete=false
rabbit.exchange.crm.internal=false

rabbit.routingKey.crm.monitoring=monitoring

##########################################################
## AAM Configuration
##########################################################
aam.environment.coreInterfaceAddress = https://symbiote-dev.man.poznan.pl:8100/coreInterface/v1
# amqp general
rabbit.exchange.aam.name=symbIoTe.AuthenticationAuthorizationManager
rabbit.exchange.aam.type=direct
rabbit.exchange.aam.durable=true
rabbit.exchange.aam.autodelete=false
rabbit.exchange.aam.internal=false
# amqp queues
rabbit.queue.validate.request=symbIoTe-AuthenticationAuthorizationManager-validate_request
rabbit.queue.getHomeToken.request=symbIoTe-AuthenticationAuthorizationManager-getHomeToken_request
rabbit.queue.ownedplatformdetails.request=symbIoTe-AuthenticationAuthorizationManager-ownedPlatformDetails_request
rabbit.queue.get.user.details=symbIoTe-AuthenticationAuthorizationManager-get_user_details_request
rabbit.queue.get.platform.owners.names=symbIoTe-AuthenticationAuthorizationManager-get_platform_owners_names
rabbit.queue.manage.user.request=symbIoTe-AuthenticationAuthorizationManager-manage_user_request
rabbit.queue.manage.platform.request=symbIoTe-AuthenticationAuthorizationManager-manage_platform_request
rabbit.queue.manage.revocation.request=symbIoTe-AuthenticationAuthorizationManager-manage_revocation_request
rabbit.queue.manage.attributes=symbIoTe-AuthenticationAuthorizationManager-manage_local_attributes_request

# routing keys
rabbit.routingKey.validate.request=symbIoTe.AuthenticationAuthorizationManager.validate_request
rabbit.routingKey.getHomeToken.request=symbIoTe.AuthenticationAuthorizationManager.getHomeToken_request
rabbit.routingKey.ownedplatformdetails.request=symbIoTe.AuthenticationAuthorizationManager.ownedPlatformDetails_request
rabbit.routingKey.get.user.details=symbIoTe-AuthenticationAuthorizationManager.get_user_details_request
rabbit.routingKey.get.platform.owners.names=symbIoTe-AuthenticationAuthorizationManager.get_platform_owners_names
rabbit.routingKey.manage.user.request=symbIoTe.AuthenticationAuthorizationManager.manage_user_request
rabbit.routingKey.manage.platform.request=symbIoTe-AuthenticationAuthorizationManager.manage_platform_request
rabbit.routingKey.manage.revocation.request=symbIoTe-AuthenticationAuthorizationManager.manage_revocation_request
rabbit.routingKey.manage.attributes=symbIoTe-AuthenticationAuthorizationManager.manage_local_attributes_request
